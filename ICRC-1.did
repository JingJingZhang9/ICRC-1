type SubAccount = blob;

type TransferArgs = record {
    from_subaccount: opt SubAccount;
    to_principal: principal;
    to_subaccount: opt SubAccount;
    amount: nat;
};

type TransferError = variant {
    // TODO
    GenericError: text;
};

type Value = variant {
    Nat : nat;
    Int : int;
    Text : text;
    Blob : blob;
};

service : {
    icrc1_metadata : () -> (vec record { text; Value; }) query;
    icrc1_name : () -> (text) query;
    icrc1_symbol : () -> (text) query;
    icrc1_decimals : () -> (nat8) query;
    icrc1_totalSupply : () -> (nat) query;
    icrc1_balanceOf : (record { of: principal; subaccount: opt SubAccount; }) -> (nat) query;
    icrc1_transfer : (TransferArgs) -> (variant { Ok: nat; Err: TransferError; });
    icrc1_supportedStandards : () -> (vec record { name : text; url : text }) query;
}

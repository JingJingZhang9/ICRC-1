type SubAccount = blob;

type TransferArgs = record {
    from_subaccount: opt SubAccount;
    to_principal: principal;
    to_subaccount: opt SubAccount;
    amount: nat64;
};

type TransferError = variant {
    // TODO
    GenericError: text;
};

type Value = variant {
    Nat : nat;
    Int : int;
    Text : text;
    Blob : blob;
};

service : {
    metadata : () -> (vec record { text; Value; }) query;
    name : () -> (text) query;
    symbol : () -> (text) query;
    decimals : () -> (nat32) query;
    totalSupply: () -> (nat64) query;
    balanceOf: (record { of: principal; subaccount: opt SubAccount; }) -> (nat64) query;
    transfer: (TransferArgs) -> (variant { Ok: nat64; Err: TransferError; });
}
